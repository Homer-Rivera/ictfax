<?php
/******************************************************************
* Copyright Â© 2012 ICT Innovations.                               *
* Developed By: Falak Nawaz                                       *
*             : Nasir Iqbal                                       *
*             : Tahir Almas                                       *
* Website : http://www.ictinnovations.com/                        *
* Mail : info@ictinnovations.com                                  *
******************************************************************/

// $Id: ictpbx_did.module,v 1.0 2012/02/29 10:42:58 ictinnovations Exp $

/**
 * @file
 * Provides support to buy did through web portal.
 */

/**
 * Implementation of hook_menu().
 */

function ictpbx_did_menu() {
  $items = array();

  $items['ictcore/did'] = array(
    'title'            => 'DID Numbers',
    'description'      => 'Manage DID Numbers',
    'page callback'    => 'ictpbx_did_list',
    'page arguments'   => array(false), // hide admin links
    'access callback'  => 'ictcore_access',
    'access arguments' => array('ictpbx did admin'),
    'type'             => MENU_NORMAL_ITEM,
    'weight'           => 15,
  );
  $items['ictcore/did/list'] = array(
    'title'            => 'List',
    'description'      => 'Manage DID Numbers',
    'page callback'    => 'ictpbx_did_list',
    'page arguments'   => array('false'), // hide admin links
    'access callback'  => 'ictcore_access',
    'access arguments' => array('ictpbx did admin'),
    'type'             => MENU_DEFAULT_LOCAL_TASK,
    'weight'           => 16,
  );
  $items['ictcore/did/add'] = array(
    'title'            => t('Create New DID'),
    'description'      => 'Create New DID',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('ictpbx_did_form', array()),
    'access callback'  => 'ictcore_access',
    'access arguments' => array('ictpbx did admin'),
    'type'             => MENU_LOCAL_TASK,
    'weight'           => 17,    
  );
  $items['ictcore/did/batch'] = array(
    'title'            => t('Create DIDs in Batch'),
    'description'      => 'Create DIDs in Batch',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('ictpbx_did_batch', array()),
    'access callback'  => 'ictcore_access',
    'access arguments' => array('ictpbx did admin'),
    'type'             => MENU_LOCAL_TASK,
    'weight'           => 18,
  );
  $items['ictcore/did/import'] = array(
    'title'            => t('Import DID List'),
    'description'      => 'Import DID Numbers List',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('ictpbx_did_import', array()),
    'access callback'  => 'ictcore_access',
    'access arguments' => array('ictpbx did admin'),
    'type'             => MENU_LOCAL_TASK,
    'weight'           => 19,    
  );
  $items['ictcore/did/%ictpbx_did/edit'] = array(
    'title'            => t('Edit DID'),
    'description'      => 'Edit DID',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('ictpbx_did_form', 2),
    'access callback'  => 'ictcore_access',
    'access arguments' => array('ictpbx did admin'),
    'type'             => MENU_CALLBACK,
  );
  $items['ictcore/did/%ictpbx_did/assign'] = array(
    'title'            => t('Assign DID'),
    'description'      => 'Assign DID',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('ictpbx_did_assign', 2),
    'access callback'  => 'ictcore_access',
    'access arguments' => array('ictpbx did admin'),
    'type'             => MENU_CALLBACK,
  );
  $items['ictcore/did/%ictpbx_did/delete'] = array(
    'title'            => t('Remove DID'),
    'description'      => 'Remove DID',
    'page callback'    => 'ictpbx_did_delete',
    'page arguments'   => array(2),
    'access callback'  => 'ictcore_access',
    'access arguments' => array('ictpbx did admin'),
    'type'             => MENU_CALLBACK,
  );
  $items['setting/did'] = array(
    'title'            => 'My Incoming Numbers',
    'description'      => 'Manage Incoming Numbers (DIDs)',
    'page callback'    => 'ictpbx_user_did_list',
    'access callback'  => 'ictfax_access',
    'access arguments' => array('can use ictfax'),
    'type'             => MENU_NORMAL_ITEM,
    'weight'           => 16,
  );

  return $items;
}

/**
 * Implementation of hook_permission().
 *
 * Defines access permissions that may be assigned to roles and used to restrict
 * access on didx module.
 */
function ictpbx_did_permission() {
  return array(
    'ictpbx did user' => array('title'=> 'ictpbx did user'),
    'ictpbx did admin' => array('title'=> 'ictpbx did admin'),
    'ictpbx did system admin' => array('title'=> 'ictpbx did system admin'),
  );
}

/**
 * Page function for did List
 *
 * It will show a list of available dids in form of list
 *
 * @return
 * page html
*/
function ictpbx_did_list($admin_links = false) {

  $header = array(
    array('data' => t('DID Number'),    'field' => 'phone',  'sort' => 'asc'),
    array('data' => t('Title'),         'field' => 'first_name'),
    array('data' => t('Assigned To'),   'field' => 'username'),
    array('data' => t('Operations')),
  );

  $query = CoreDB::db_select('account', 'a')->extend('PagerDefault');
  $query->fields('a', array('account_id', 'first_name', 'last_name', 'phone', 'email'));
  $query->leftjoin('usr','u','u.usr_id = a.created_by');
  $query->addfield('u', 'username', 'username');
  //$query->addExpression('u', "CONCAT_WS(' ', last_name, first_name)", 'user_name');
  //$query->condition('a.last_name', NULL, 'IS');
  //$query->condition('t.uid', $user->uid,'='); 
  $result = $query->limit(50)         
            ->extend('TableSort')
            ->orderByHeader($header)
            ->execute();

  while ($did = $result->fetchAssoc()) {
    $row_id = $did['account_id'];
    $rows[$row_id][] = check_plain($did['phone']);
    $rows[$row_id][] = check_plain($did['first_name']);
    $rows[$row_id][] = check_plain($did['username']); 
    $rows[$row_id][] = "<p style='width:125px; height:2px;'>" . _ictpbx_did_list_links($did) . "</p>".
			  "<p style='font-size:9px'>" . check_plain($did['email']) . "</p>";
  }
  if (!isset($rows)) {
    $rows[] = array(array('data' => t('No DID Number available'), 'colspan' => 6));
  }
  
  $output = theme('table', array('header'=>$header, 'rows'=>$rows));
  $output .= theme('pager');

  return $output;
}

/**
 * Build the Forward and Release links for a single did.
 *
 * @see did_list()
 */
function _ictpbx_did_list_links($did) {
  $links['edit'] = array(
    'title' => t('Edit'),
    'href' => 'ictcore/did/' . $did['account_id'] . '/edit',
    'html' => TRUE,
  );
  $links['delete'] = array(
    'title' => t('Remove'),
    'href' => 'ictcore/did/' . $did['account_id'] . '/delete',
    'html' => TRUE,
  );
  $links['assign'] = array(
    'title' => t('Assign / Release'),
    'href' => 'ictcore/did/' . $did['account_id'] . '/assign',
    'html' => TRUE,
  );
  return theme('links', array('links'=>$links, 'attributes' => array('class' => array('links', 'inline'))));
}

/**
 * Build the did form.
 */
function ictpbx_did_form($form, &$form_state, $edit = array()) {
  // It's safe to use on both an empty array, and an incoming array with full or partial data.
  $edit += array(
    'account_id' => '',
    'phone'      => '',
    'first_name' => '',
    'email'      => '',
  );

  // If we're editing an existing fax, we'll add a value field to the form
  // containing the fax's unique ID.
  if (!empty($edit['account_id'])) {
    $form['account_id'] = array(
      '#type'          => 'value',
      '#value'         => $edit['account_id'],
    );
  }

  $form['info'] = array(
    '#type'  => 'fieldset',
    '#title' => t('did Information'),
  );

  $form['info']['phone'] = array(
    '#type'          => 'textfield',
    '#title'         => t('DID Number'),
    '#required'      => TRUE,
    '#default_value' => $edit['phone'],
  );

  $form['info']['first_name'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Title'),
    '#default_value' => $edit['first_name'],
  );

  $form['info']['email'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Email'),
    '#default_value' => $edit['email'],
  );

  $form['buttons']['submit'] = array(
    '#type'          => 'submit',
    '#value'         => t('Submit'),
  );

  return $form;
}

/**
 * Validate
 *
 */
function ictpbx_did_form_validate($form, &$form_state) {
  $did = $form_state['values'];
  if (!isset($did['account_id'])) {
    $query  = "SELECT account_id FROM account WHERE phone = :phone";
    $result = CoreDB::db_query($query, array(':phone'=>$did['phone']));
    if ($res = $result->fetchAssoc()) {
      form_set_error('phone', t('DID already exists!'));
    }
  }
}

/**
 * Inserts a new did, or updates an existing one.
 *
 * @param $did
 *   A did to be saved. If $did['did_id'] is set, the did will be updated.
 *   Otherwise, a new did will be inserted into the database.
 * @return
 *   The saved did, with its ID set.
 */
function ictpbx_did_form_submit($form, &$form_state) {
  global $user;

  $data = $form_state['values'];

  // save did for ictcore
  $did = array(
    'phone'          => $data['phone'],
    'first_name'     => $data['first_name'],
    'email'          => $data['email']
  );

  if (!empty($data['account_id'])) {
    $did['account_id'] = $data['account_id'];
  }
  if (isset($data['created_by'])) {
    $did['created_by'] = $data['created_by'];
  }
  if (!isset($data['date_created'])) {
    $did['date_created'] = time();
  }

  // save the did
  if (isset($did['account_id'])) {
    CoreDB::db_update('account')->fields($did)->condition('account_id', $did['account_id'], '=')->execute();
    drupal_set_message(t('DID updated successfully!'), 'status');
  } else {
    CoreDB::db_insert('account')->fields($did)->execute();
    drupal_set_message(t('DID created successfully!'), 'status');
  }
  $form_state['redirect'] = 'ictcore/did/list';
}

/**
 * Loader function for individual dids.
 */
function ictpbx_did_load($did_id) {
  $sql    = "SELECT * FROM account WHERE account_id = :account_id";
  $result = CoreDB::db_query($sql, array(':account_id' => $did_id));
  if ($did = $result->fetchAssoc()) {
    return $did;
  } else {
    drupal_set_message(t('Specified did does not exist! or you have not proper permissions!'), 'error');
    return FALSE;
  }
}

/**
 * Loader function for all dids.
 */
function ictpbx_did_option() {
  $sql    = "SELECT account_id, phone FROM account";
  $result = CoreDB::db_query($sql);
  $rows   = array();
  while ($did = $result->fetchAssoc()) {
    $row_id = $did['account_id'];
    $rows[$row_id] = check_plain($did['phone']);
  }
  if (!isset($rows)) {
    return FALSE;
  }
  return $rows;
}



/**
 * Deletes a did, given its unique ID.
 *
 * @param $did
 *   An array of did containing the ID of a did.
 */
function ictpbx_did_delete($did) {
  $sql = 'DELETE FROM account WHERE account_id = :account_id';
  CoreDB::db_query($sql, array(':account_id'=>$did['account_id']));
  drupal_set_message(t('DID deleted successfully!'), 'status');
  drupal_goto('ictcore/did/list');
}


/**
 * Build the did batch form.
 */
function ictpbx_did_batch($form, &$form_state, $edit = array()) {
  $edit += array(
    'from'       => '',
    'to'         => '',
    'first_name' => '',
    'email'      => '',
  );

  $form['info'] = array(
    '#type'  => 'fieldset',
    '#title' => t('DID Information'),
  );

  $form['info']['from'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Range From'),
    '#required'      => TRUE,
    '#default_value' => $edit['from'],
  );
  
  $form['info']['to'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Range To'),
    '#required'      => TRUE,
    '#default_value' => $edit['to'],
  );

  $form['info']['first_name'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Title'),
    '#default_value' => $edit['first_name'],
  );

  $form['info']['email'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Email'),
    '#default_value' => $edit['email'],
  );

  $form['buttons']['submit'] = array(
    '#type'          => 'submit',
    '#value'         => t('Submit'),
  );

  return $form;
}

/**
 * Validates did batch insert
*/
function ictpbx_did_batch_validate($form, &$form_state) {
  $did = $form_state['values'];
  
  // validation in case of batch insert
  if ($did['from'] == '' || $did['to'] == '') {
    form_set_error('from', t('Both fileds in DID Range cannot be empty'));    
  } else {
    if (!is_numeric($did['from']) || !is_numeric($did['to'])) {
      form_set_error('from', t('Please enter a valid DID range only numbers are allowed!'));
    } else {
      $query  = "SELECT count(account_id) as num FROM account WHERE phone >= :from AND phone<= :to";
      $result = CoreDB::db_query($query, array(':from'=>$did['from'], ':to'=>$did['to']));
      $count = $result->fetchField();
    }
  }
}

/**
 * Creates dids in batch and saves them.
 */
function ictpbx_did_batch_submit($form, &$form_state) {
  global $user;

  $did = $form_state['values'];
  $did['created_by'] = 0; // no owner

  for ($num = $did['from']; $num <= $did['to']; $num++) {
    $did['phone'] = $num;
    unset($did['account_id']);
    CoreDB::db_insert('account')->fields($did)->execute();
  }

  $form_state['redirect'] = 'ictcore/did/list';
}

/**
 * Build the did import form.
 */
function ictpbx_did_import($form, &$form_state, $edit = array()) {
  $edit += array(
    'upload'     => '',
    'to'         => '',
    'first_name' => '',
    'email'      => '',
  );

  $form['info'] = array(
    '#type'  => 'fieldset',
    '#title' => t('did Information'),
  );

  // helper field for file upload
  $form['#attributes'] = array('enctype' => "multipart/form-data");
  $form['info']['upload'] = array(
    '#type'          => 'file',
    '#title'         => t('Upload DID List'),
    '#default_value' => $edit['upload'],
  );
  $module_path = base_path() . drupal_get_path('module', 'ictpbx_did');
  $form['info']['example'] = array(
    '#type'          => 'markup',
    '#markup'        => t("Example File: <a href='$module_path/did_sample.csv'>did_sample.csv</a>"),
  );

  $form['buttons']['submit'] = array(
    '#type'          => 'submit',
    '#value'         => t('Submit'),
  );

  return $form;
}

/**
 * Validates did import insert
*/
function ictpbx_did_import_validate($form, &$form_state) {

}

/**
 * Creates dids in import and saves them.
 */
function ictpbx_did_import_submit($form, &$form_state) {
  global $user;
  $did = $form_state['values'];
  // set source file path
  //$file = file_save_upload('file_upload');
  $validators = array(
    'file_validate_extensions' => array('csv xls'),
  );
  if($file = file_save_upload('file_upload', $validators)) {
    $orgFile = '/tmp/'.$file->filename;
    if (file_validate_extensions($file, 'xml')) {
      $file_name = tempnam('', 'did-list-');
      $command = sys_which('xlhtml') . " -csv -xp:0 ". $orgFile ." > $file_name";
      exec($command);
    } else {
      $file_name = $orgFile;
    }
    $handle  = fopen($file_name, "r");
    while (($data = fgetcsv($handle, 500, ",")) !== false) {
        $did       = array();
        if (count($data) == 1) {
            $did['phone']       = $data[0];
        } else if (count($data) >= 2) {
            $did['phone']       = $data[0];
            $did['first_name']  = $data[1];
        }
        if (count($did) > 0) {
          $did['created_by'] = -1; // new did not assigned to anybody

          // now save did
          $result = CoreDB::db_update('account', $did);
          $total_rows++;
        } else {
          // incomplete did record
          $skipped_rows++;
        }
    }
    fclose($handle);
    return $total_rows;
  }
}

/**
 * Build the did form.
 */
function ictpbx_did_assign($form, &$form_state, $edit = array()) {
  $edit += array(
    'phone'      => '',
    'first_name' => '',
    'service'    => '',
  );

  $form['info'] = array(
    '#type'  => 'fieldset',
    '#title' => t('DID Information'),
  );

  // containing the DID's unique ID.
  $form['info']['account_id'] = array(
    '#type'          => 'value',
    '#value'         => $edit['account_id'],
  );

 $form['info']['phone'] = array(
    '#type'          => 'item',
    '#title'         => t('DID Number'),
    '#markup'        => $edit['phone']
  );

  $form['setting'] = array(
    '#type'  => 'fieldset',
    '#title' => t('User Information'),
  );
  $form['setting']['created_by'] = array(
    '#type'          => 'select',
    '#title'         => t('Assign to User'),
    '#required'      => TRUE,
    '#options'       => ictcore_user_option(),
    '#default_value' => $edit['created_by'],
  );
  $form['setting']['service'] = array(
    '#type'          => 'select',
    '#title'         => t('Select Service'),
    '#required'      => TRUE,
    '#options'       => array(
      'faxtoemail' => 'Fax to Email'
    ),
  );

  $form['buttons']['submit'] = array(
    '#type'          => 'submit',
    '#value'         => t('Submit'),
  );

  return $form;
}

/**
 * Validate assign form
 *
 */
function ictpbx_did_assign_validate($form, &$form_state) {
  $did = $form_state['values'];
  if (!isset($did['account_id'])) {
    form_set_error('account_id', t('Invalid reference to existing account!'));
  }
}

/**
 * Inserts a new did, or updates an existing one.
 *
 * @param $did
 *   A did to be saved. If $did['did_id'] is set, the did will be updated.
 *   Otherwise, a new did will be inserted into the database.
 * @return
 *   The saved did, with its ID set.
 */
function ictpbx_did_assign_submit($form, &$form_state) {
  global $user;

  $did = $form_state['values'];

  if (!isset($did['created_by']) || empty($did['created_by'])) {
    $did['created_by'] = 0;
    $did['service']    = '';
  }

  include_once "/usr/ictcore/core/core.php";

  // Now compile newly selected service
  $oProgram = new Program(); // unknown program
  switch ($did['service']) {
    case 'faxtoemail':
      // Create new program entry
      $oProgram = new Faxtoemail();
      break;
    default:
      // do nothing, in future we can add new applications here
      break;
  }

  $oAccount = new Account($did['account_id']); // open current account
  $oAccount->dissociate();                     // dissociate current account from existing user and also remove all programs
  $oAccount->associate($did['created_by']);    // re-assign to newly selected user
  $oAccount->install_program($oProgram);       // attach / install above selected Program with current account

  // A little hack for faxtoemail
  if ($did['service'] == 'faxtoemail') {
    $query  = "UPDATE account a JOIN usr u ON a.created_by=u.usr_id SET a.email=u.email
               WHERE a.account_id = :account_id";
    $tranRs = CoreDB::db_query($query, array(':account_id' => $did['account_id']));
  }

  drupal_set_message(t('DID assigned successfully!'), 'status');
  $form_state['redirect'] = 'ictcore/did/list';
} 

/**********************************
* Now ICTFax User to Manage DIDs  *
***********************************/
/**
 * Page function for did List
 *
 * It will show a list of available dids in form of list
 *
 * @return
 * page html
*/
function ictpbx_user_did_list() {
  global $user;
  $header = array(
    array('data' => t('DID Number'),    'field' => 'phone',  'sort' => 'asc'),
    array('data' => t('Title'),         'field' => 'first_name'),
    array('data' => t('Forwarded To'),  'field' => 'email'),
    array('data' => t('Operations')),
  );

  $query = CoreDB::db_select('account', 'a')->extend('PagerDefault');
  $query->fields('a', array('account_id', 'phone', 'first_name', 'email'));
  $query->leftjoin('usr','u','u.usr_id = a.created_by');
  $query->condition('u.usr_id', $user->uid , '=');

  $result = $query->limit(50)         
            ->extend('TableSort')
            ->orderByHeader($header)
            ->execute();

  while ($did = $result->fetchAssoc()) {
    $row_id = $did['account_id'];
    $rows[$row_id][] = check_plain($did['phone']);
    $rows[$row_id][] = check_plain($did['first_name']);
    $rows[$row_id][] = check_plain($did['email']); 
    $rows[$row_id][] = _ictpbx_user_did_list_links($did);
  }
  if (!isset($rows)) {
    $rows[] = array(array('data' => t('No DID Number available'), 'colspan' => 6));
  }

  $output = theme('table', array('header'=>$header, 'rows'=>$rows));
  $output .= theme('pager');

  return $output;
}

/**
 * Build the Forward and Release links for a single did.
 *
 * @see did_list()
 */
function _ictpbx_user_did_list_links($did) {
  $links['forward'] = array(
    'title' => t('Forward'),
    'href' => 'setting/did/' . $did['account_id'] . '/forward',
    'html' => TRUE,
  );
  return theme('links', array('links'=>$links, 'attributes' => array('class' => array('links', 'inline'))));
}

/**
 * Build the did form.
 */
function ictpbx_did_forward($form, &$form_state, $edit = array()) {

  $form['info'] = array(
    '#type'  => 'fieldset',
    '#title' => t('DID Information'),
  );
  
    // containing the DID's unique ID.
  if (!empty($edit['account_id'])) {
    $form['info']['account_id'] = array(
      '#type'        => 'value',
      '#value'       => $edit['account_id'],
    );
  }

  $form['info']['phone'] = array(
    '#type'          => 'textfield',
    '#title'         => t('DID Number'),
    '#value'         => $edit['phone'],
  );
  
  $form['setting'] = array(
    '#type'  => 'fieldset',
    '#title' => t('User Information'),
  );
  
  $form['setting']['email'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Forward DID'),
    '#default_value' => $edit['email'],
  );

  $form['buttons']['submit'] = array(
    '#type'          => 'submit',
    '#value'         => t('Submit'),
  );

  return $form;
}

/**
 * Inserts a new did, or updates an existing one.
 * 
 * @param $did
 *   A did to be saved. If $did['did_id'] is set, the did will be updated.
 *   Otherwise, a new did will be inserted into the database.
 * @return
 *   The saved did, with its ID set.
 */
function ictpbx_did_forward_submit($form, &$form_state) {
  $did = $form_state['values'];
  
  $data = $form_state['values'];
  // save did for ictcore
  $did = array(
    'email'          => $data['email']
  );
  if (!empty($data['account_id'])) {
    $did['account_id'] = $data['account_id'];
  }

  // save the did assignment
  if (isset($did['account_id'])) {
    CoreDB::db_update('account')->fields($did)->condition('account_id', $did['account_id'], '=')->execute();
  }
  drupal_set_message(t('DID assigned successfully!'), 'status');
  //  save_conf_did();
  $form_state['redirect'] = 'setting/did/list';
}
