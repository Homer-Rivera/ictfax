<?php
/******************************************************************
* Copyright Â© 2012 ICT Innovations.                               *
* Developed By: Falak Nawaz                                       *
*             : Nasir Iqbal                                       *
*             : Tahir Almas                                       *
* Website : http://www.ictinnovations.com/                        *
* Mail : info@ictinnovations.com                                  *
******************************************************************/

// $Id: ictcore.module,v 1.0 2012/02/29 18:08:59 ictinnovations Exp $

/**
 * Implementation of hook_menu().
 *
 */
function ictcore_menu() {
  $items = array();

  $items['ictcore'] = array(
    'title'            => 'ICTCore System',
    'description'      => 'Configure ICTCore System Settings',
    'page callback'    => 'system_admin_menu_block_page',
    'file'             => 'system.admin.inc',
    'file path'        => drupal_get_path('module', 'system'),
    'access callback'  => 'ictcore_access',
    'access arguments' => array('ictcore system admin'),
    'position'         => 'left',
    'expanded'         => TRUE,
    'weight'           => -20,
  );

  $items['ictcore/setting'] = array(
    'title'            => 'Settings',
    'description'      => 'My User Settings',
    'page callback'    => 'system_admin_menu_block_page',
    'file'             => 'system.admin.inc',
    'file path'        => drupal_get_path('module', 'system'),
    'access callback'  => 'ictfax_access',
    'access arguments' => array('can use ictfax'),
    'position'         => 'left',
    'weight'           => -10,
  );

  $items['ictcore/default_settings'] = array(
    'title'            => 'Default Settings',
    'description'      => 'Configure Default Settings',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('ictcore_default_settings'),
    'access callback'  => 'ictcore_access',
    'access arguments' => array('ictcore system admin'),
    'type'             => MENU_NORMAL_ITEM,
    'weight'           => 42,
  );

  return $items;
}

/**
 * Implementation of hook_perm().
 *
 * Defines access permissions that may be assigned to roles and used to restrict
 * access on campaign module.
 */
function ictcore_permission() {
  return array(
    'ictcore blocked'      => array('title' => 'ictcore blocked'),
    'ictcore user'         => array('title' => 'ictcore user'),
    'ictcore admin'        => array('title' => 'ictcore admin'),
    'ictcore system admin' => array('title' => 'ictcore system admin')
  );
}

function ictcore_access($access) {
  global $user;

  if (is_array($access)) $access = $access[0];
  /*if ($user->phone_verified == 0) {
  	if ($access == 'ictcore blocked') {
  	  return true;
  	} else {
  	  return false;
  	}
  }*/
  if (!user_access($access)) return false;

  return true;
}

/**
 * Loader function for individual ictregistrations using UID.
 *
 */
function ictcore_user_load($users) {
  $sql    = "SELECT * FROM usr WHERE usr_id IN (:usr_id_list)";
  $result = CoreDB::db_query($sql, array(':usr_id_list' => array_keys($users)));
  foreach ($result as $record) {
    foreach ($record as $key => $value) {
      if (empty($users[$record->usr_id]->{$key})) {
        $users[$record->usr_id]->{$key} = $value;
      }
    }
  }
  return $users;
}

/**
 * Build the ictcore editing form.
 *
 * @ingroup forms
 * @see ictcore_form_submit()
 */
function ictcore_form_user_register_form_alter(&$form, &$form_state) {
  
  $form['personal'] = array(
    '#type'          => 'fieldset',
    '#title'         => t('Personal Information'),
  );

  $form['personal']['first_name'] = array(
    '#type'          => 'textfield',
    '#title'         => t('First Name'),
    '#required'      => TRUE,
  );

  $form['personal']['last_name'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Last Name'),
    '#required'      => TRUE,
  );

  $form['contact'] = array(
    '#type'          => 'fieldset',
    '#title'         => t('Contact Information'),
  );

  $form['contact']['phone'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Phone'),
    '#required'      => TRUE,
  );

  $form['contact']['address'] = array(
    '#type'          => 'textarea',
    '#title'         => t('Address'),
    '#required'      => TRUE,
  );

  $form['contact']['company'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Company'),
  );

  $form['#validate'][] = 'ictcore_form_validate';
  
  $form['#submit'][] = 'ictcore_form_submit';
  
  return $form;
}

function ictcore_form_validate($form, &$form_state) {
  $existing_record = 0;
  $ictcore = $form_state['values'];
  // TODO validate here 
}

/**
 * Inserts a new ictcore user, or updates an existing one.
 *
 */
function ictcore_form_submit($form, &$form_state) {
  global $user;
  $data = $form_state['values'];

  // for ictcore
  require_once 'includes/password.inc';
  $ictcore_user = array(
    'username'     => $data['name'],
    'passwd'       => user_hash_password($data['pass']),
    'first_name'   => $data['first_name'],
    'last_name'    => $data['last_name'],
    'phone'        => $data['phone'],
    'email'        => $data['mail'],
    'address'      => $data['address'],
    'company'      => $data['company'],
    'active'       => 1,
  );
  if (!empty($data['usr_id'])) {
    $ictcore_user['usr_id'] = $data['usr_id'];
  }
  if (!isset($data['date_created'])) {
    $ictcore_user['date_created'] = time();
  }
  if (!isset($data['created_by'])) {
    $ictcore_user['created_by'] = $user->uid;
  }

  if (isset($ictcore_user['usr_id'])) {
    CoreDB::db_update('usr')->fields($ictcore_user)->condition('usr_id', $ictcore_user['usr_id'], '=')->execute();
  } else {
    CoreDB::db_insert('usr')->fields($ictcore_user)->execute();
  }  
}

/* 
* To show custom fields on the user profile page as well
*/
function ictcore_form_user_profile_form_alter(&$form, $form_state)
{
  $uid  = $form_state['user']->uid;  
  $user = array($uid => $form_state['user']);
  $aUsr = ictcore_user_load($user); // it may return a list of users
  $edit = $aUsr[$uid];

  $form['personal'] = array(
    '#type'          => 'fieldset',
    '#title'         => t('Personal Information'),
  );

  // If we're editing an existing user, we'll add a value field to the form
  // containing the user's unique ID.
  if (!empty($edit->usr_id)) {
    $form['personal']['usr_id'] = array(
      '#type'        => 'value',
      '#value'       => $edit->usr_id,
    );
  }

  $form['personal']['first_name'] = array(
    '#type'          => 'textfield',
    '#title'         => t('First Name'),
    '#required'      => TRUE,
    '#default_value' => $edit->first_name,
  );

  $form['personal']['last_name'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Last Name'),
    '#required'      => TRUE,
    '#default_value' => $edit->last_name,
  );

  $form['contact'] = array(
    '#type'          => 'fieldset',
    '#title'         => t('Contact Information'),
  );

  $form['contact']['phone'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Phone'),
    '#required'      => TRUE,
    '#default_value' => $edit->phone,
  );

  $form['contact']['address'] = array(
    '#type'          => 'textarea',
    '#title'         => t('Address'),
    '#required'      => TRUE,
    '#default_value' => $edit->address,
  );

  $form['contact']['company'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Company'),
    '#default_value' => $edit->company,
  );

  $form['#validate'][] = 'ictcore_form_validate';

  $form['#submit'][] = 'ictcore_form_submit';
  
  return $form;

}

/**
 * Loader function for all services.
 */
function ictcore_service_option() {
  $sql = "SELECT service_id, name FROM service";
  $result = CoreDB::db_query($sql);
  $rows = array();
  while ($service = $result->fetchAssoc()) {
    $row_id = $service['service_id'];
    $rows[$row_id] = check_plain($service['name']);
  }
  if (!isset($rows)) {
    return FALSE;
  }
  return $rows;
}

/**
 * Loader function for all technologies.
 */
function ictcore_technology_option() {
  $sql = "SELECT technology_id, technology_name FROM technology";
  $result = CoreDB::db_query($sql);
  $rows = array();
  while ($technology = $result->fetchAssoc()) {
    $row_id = $technology['technology_id'];
    $rows[$row_id] = check_plain($technology['technology_name']);
  }
  if (!isset($rows)) {
    return FALSE;
  }
  return $rows;
}

/**
 * Loader function for all gateways.
 */
function ictcore_gateway_option() {
  $sql = "SELECT gateway_id, name FROM gateway";
  $result = CoreDB::db_query($sql);
  $rows = array();
  while ($gateway = $result->fetchAssoc()) {
    $row_id = $gateway['gateway_id'];
    $rows[$row_id] = check_plain($gateway['name']);
  }
  if (!isset($rows)) {
    return FALSE;
  }
  return $rows;
}

/**
 * Loader function for all trunks.
 */

function ictcore_user_option() {
  $sql    = "SELECT usr_id, username FROM usr WHERE active = 1;";
  $result = CoreDB::db_query($sql);
  $rows   = array();
  while ($user = $result->fetchAssoc()) {
    $row_id = $user['usr_id'];
    $rows[$row_id] = check_plain($user['username']);
  } 
  if (!isset($rows)) {
    return FALSE;
  }
  return $rows;
}

function ictcore_default_settings($form) {

  $form['general'] = array(
    '#type'  => 'fieldset',
    '#title' => t('General Settings'),
  );
  $form['general']['default_caller_id'] = array(
    '#type'          => 'textfield',
    '#title'         => t("Default Outgoing Caller ID"),
    '#default_value' => variable_get('default_caller_id', '33184164306'),
    '#description'   => t('When a caller has no did, then above caller id will be used for outgoing calls.'),
  );

  return system_settings_form($form);
}

/**
 * connect with second database (ictcore)
 */
$aICTConf = array();
$confSource = is_file('/etc/ictcore.conf') ? '/etc/ictcore.conf' : '/usr/ictcore/etc/ictcore.conf';
if (is_file($confSource)) {
  $aICTConf = parse_ini_file($confSource, TRUE);
}
$aICTCoreDB = array();
if (!empty($aICTConf['db']['name'])) $aICTCoreDB['database'] = $aICTConf['db']['name'];
if (!empty($aICTConf['db']['user'])) $aICTCoreDB['username'] = $aICTConf['db']['user'];
if (isset($aICTConf['db']['pass']))  $aICTCoreDB['password'] = $aICTConf['db']['pass']; // isset, to allow empty pass
if (!empty($aICTConf['db']['host'])) $aICTCoreDB['host']     = $aICTConf['db']['host'];
if (!empty($aICTConf['db']['port'])) $aICTCoreDB['port']     = $aICTConf['db']['port'];
if (!empty($aICTConf['db']['type'])) $aICTCoreDB['driver']   = $aICTConf['db']['type'];
$result = Database::addConnectionInfo('ictcore', 'default', $aICTCoreDB);

class CoreDB
{
  public function __call($name, $arguments) {
    return self::_callStatic($name, $arguments);
  }

  /**  As of PHP 5.3.0  */
  public static function __callStatic($name, $arguments) {
    $db = db_set_active('ictcore');
    $result = call_user_func_array($name, $arguments);
    db_set_active();
    return $result;
  }
}
